version: 2.1
jobs:
  backend:
    docker:
      - image: circleci/openjdk:11-jdk
    working_directory: ~/squadmap/squadmap-backend
    steps:
      - checkout:
          path: ~/squadmap
      - restore_cache:
          keys:
            - squadmap-dependencies-{{ checksum "build.gradle" }}
            - squadmap-dependencies-
      - run:
          name: Dependencies
          command: ../gradlew :squadmap-backend:dependencies
      - save_cache:
          paths:
            - ~/.gradle
          key: squadmap-dependencies-{{ checksum "build.gradle" }}
      - run:
          name: Build
          command: ../gradlew :squadmap-backend:build
      - persist_to_workspace:
          root: ~/
          paths:
            - squadmap/.gradle
            - squadmap/squadmap-backend/build
            - squadmap/squadmap-frontend/.gradle
            - squadmap/squadmap-frontend/build
            - squadmap/squadmap-frontend/dist

  frontend:
    docker:
      - image: circleci/node:10.16.0-browsers
    working_directory: ~/squadmap/squadmap-frontend
    steps:
      - checkout:
          path: ~/squadmap
      - restore_cache:
          key: squadmap-{{ .Branch }}-{{ checksum "package-lock.json" }}
      - run:
          name: Npm install
          command: npm install
      - save_cache:
          key: squadmap-{{ .Branch }}-{{ checksum "package-lock.json" }}
          paths:
            - "node_modules"
      - run:
          name: Test
          command: npm run test -- --no-watch --no-progress --browsers=ChromeHeadlessCI
      - persist_to_workspace:
          root: ~/
          paths:
            - squadmap/squadmap-frontend/coverage
            - squadmap/squadmap-frontend/node_modules

  sonarcloud:
    docker:
      - image: circleci/openjdk:11-jdk
    working_directory: ~/squadmap
    steps:
      - checkout:
          path: ~/squadmap
      - attach_workspace:
          at: ~/
      - run:
          name: Analyze on Sonarcloud
          command: ./gradlew sonarqube --scan

workflows:
  main:
    jobs:
      - frontend:
          context: SonarCloud
      - backend:
          context: SonarCloud
      - sonarcloud:
          context: SonarCloud
          requires:
            - frontend
            - backend
